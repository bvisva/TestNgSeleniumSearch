<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd" >

<suite name = "SearchSuite">
<parameter name="selenium.chromedriver" value="webdriver.chrome.driver" />
<parameter name="selenium.chromedriverurl" value="C:\\Users\\DELL\\eclipse-workspace\\BrowserDrivers\\chromedriver.exe" />
<listeners>
<listener class-name = "testnglistners.TestListner"></listener>
</listeners>

   <test name = "testdemo">
      <classes>
         <class name = "testngmain.TestDemo" />         
      </classes>
   </test>

   <test name = "searchdemo">
      <classes>
         <class name = "testngmain.AmazonSearch" />
         <class name = "testngmain.GoogleSearch" />
      </classes>
   </test>
   
   <!-- <suite name="My suite" parallel="methods" thread-count="5">
<suite name="My suite" parallel="tests" thread-count="5">
<suite name="My suite" parallel="classes" thread-count="5">
<suite name="My suite" parallel="instances" thread-count="5">
    -->
  
  <!--  <test name = "googlesearchpage">
      <classes>
         <class name = "Test2" />
      </classes>
   </test> -->
   <!-- <groups>
    <run>
      <include name="functest"/>
    </run>
    -->
    <!--  <class name="example1.Test1">
      <methods>
        <include name=".*enabledTestMethod.*"/>
        <exclude name=".*brokenTestMethod.*"/>
      </methods>
     </class>
     -->
     <!-- <groups>
    <run>
      <include name="checkintest"/>
      <exclude name="broken"/>
    </run>
  </groups>
     @Test(groups = {"checkintest", "broken"} )
public void testMethod2() {
}
      -->
      
      <!-- @Parameters({ "datasource", "jdbcDriver" })
@BeforeMethod
public void beforeTest(String ds, String driver) {
  m_dataSource = ...;                              // look up the value of datasource
  m_jdbcDriver = driver;
}
       -->
       <!-- public class StaticProvider {
  @DataProvider(name = "create")
  public static Object[][] createData() {
    return new Object[][] {
      new Object[] { new Integer(42) }
    };
  }
}
 
public class MyTest {
  @Test(dataProvider = "create", dataProviderClass = StaticProvider.class)
  public void test(Integer n) {
    // ...
  }
}
        -->
        
        <!-- @Test
public void serverStartedOk() {}
 
@Test(dependsOnMethods = { "serverStartedOk" })
public void method1() {}
         -->
         
         <!-- @Test(groups = { "init" })
public void serverStartedOk() {}
 
@Test(groups = { "init" })
public void initEnvironment() {}
 
@Test(dependsOnGroups = { "init.*" })
public void method1() {}
          -->
          <!-- <test name="My suite">
  <groups>
    <dependencies>
      <group name="c" depends-on="a  b" />
      <group name="z" depends-on="c" />
    </dependencies>
  </groups>
</test>
           -->
           
           <!-- <target name="reports">
  <junitreport todir="test-report">
    <fileset dir="test-output">
      <include name="*/*.xml"/>
    </fileset>
  
    <report format="noframes"  todir="test-report"/>
  </junitreport>
</target>
            -->
  
</suite>